# Generated by Django 5.2.4 on 2025-07-09 21:21

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('haunt_ops', '0002_alter_appuser_options_alter_appuser_managers_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('event_name', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100, unique=True)),
                ('group_points', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'groups',
            },
        ),
        migrations.AlterModelOptions(
            name='appuser',
            options={},
        ),
        migrations.AlterModelManagers(
            name='appuser',
            managers=[
            ],
        ),
        migrations.AddField(
            model_name='appuser',
            name='waiver',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='allergies',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='date_of_birth',
            field=models.DateField(null=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='email',
            field=models.CharField(max_length=150, unique=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='haunt_experience',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='ice_name',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='ice_phone',
            field=models.CharField(max_length=12, null=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='ice_relationship',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='last_activity',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='referral_source',
            field=models.CharField(max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='username',
            field=models.CharField(max_length=150, unique=True),
        ),
        migrations.AlterModelTable(
            name='appuser',
            table='app_user',
        ),
        migrations.CreateModel(
            name='EventVolunteers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='haunt_ops.events')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='haunt_ops.groups')),
            ],
            options={
                'db_table': 'event_volunteers',
            },
        ),
        migrations.CreateModel(
            name='EventChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('onsite', models.BooleanField(default=False)),
                ('costume', models.BooleanField(default=False)),
                ('makeup', models.BooleanField(default=False)),
                ('trained', models.BooleanField(default=False)),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='haunt_ops.events')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='haunt_ops.groups')),
            ],
            options={
                'db_table': 'event_checklist',
            },
        ),
    ]
