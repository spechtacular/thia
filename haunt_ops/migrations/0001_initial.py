# Generated by Django 5.2.4 on 2025-08-13 20:46

import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Events",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("event_date", models.DateField()),
                ("event_name", models.CharField(max_length=500)),
                ("event_status", models.TextField(default="TBD", max_length=50)),
            ],
            options={
                "db_table": "events",
                "ordering": ["event_date"],
            },
        ),
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("email", models.CharField(max_length=150, unique=True)),
                ("username", models.CharField(max_length=150, unique=True)),
                (
                    "image_url",
                    models.CharField(blank=True, default="default.jpg", max_length=200),
                ),
                ("tshirt_size", models.CharField(default="unknown", max_length=12)),
                ("address", models.CharField(default="unknown", max_length=100)),
                (
                    "city",
                    models.CharField(blank=True, default="unknown", max_length=100),
                ),
                ("state", models.CharField(default="CA", max_length=30)),
                ("zipcode", models.CharField(default="unknown", max_length=20)),
                ("country", models.CharField(default="USA", max_length=30)),
                (
                    "company",
                    models.CharField(blank=True, default="unknown", max_length=100),
                ),
                ("phone1", models.CharField(default="unknown", max_length=12)),
                ("phone2", models.CharField(blank=True, max_length=12, null=True)),
                ("date_of_birth", models.DateField(default=django.utils.timezone.now)),
                (
                    "last_activity",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("email_blocked", models.BooleanField(default=False)),
                ("ice_name", models.CharField(max_length=100)),
                ("ice_relationship", models.CharField(max_length=100)),
                ("ice_phone", models.CharField(max_length=12)),
                ("wear_mask", models.BooleanField(default=False)),
                (
                    "referral_source",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "haunt_experience",
                    models.CharField(
                        blank=True, default="none", max_length=500, null=True
                    ),
                ),
                (
                    "allergies",
                    models.CharField(
                        blank=True, default="none", max_length=100, null=True
                    ),
                ),
                ("waiver", models.BooleanField(default=False)),
                ("point_total", models.FloatField(default=0.0)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "app_user",
                "ordering": ["last_name"],
            },
        ),
        migrations.CreateModel(
            name="EventVolunteers",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("task", models.TextField(blank=True, null=True)),
                ("slot_column", models.TextField(blank=True)),
                ("slot_row", models.TextField(blank=True)),
                ("signed_in", models.BooleanField(blank=True, default=False)),
                ("conflict", models.BooleanField(blank=True, default=False)),
                ("confirmed", models.BooleanField(blank=True, default=False)),
                ("waitlist", models.BooleanField(blank=True, default=False)),
                ("points", models.FloatField(blank=True, default=0.0)),
                ("event_name", models.TextField(blank=True, null=True)),
                ("under_18", models.BooleanField(blank=True, default=False)),
                ("under_16", models.BooleanField(blank=True, default=False)),
                ("first_name", models.CharField(blank=True, max_length=30)),
                ("last_name", models.CharField(blank=True, max_length=30, null=True)),
                ("hours", models.FloatField(blank=True, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("phone1", models.CharField(default="unknown", max_length=12)),
                ("full_address", models.CharField(default="unknown", max_length=100)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("wear_mask", models.BooleanField(blank=True, default=False)),
                ("waiver", models.BooleanField(blank=True, default=False)),
                ("ice_name", models.CharField(default="unknown", max_length=100)),
                (
                    "ice_relationship",
                    models.CharField(default="unknown", max_length=100),
                ),
                ("ice_phone", models.CharField(default="unknown", max_length=12)),
                (
                    "allergies",
                    models.CharField(
                        blank=True, default="none", max_length=100, null=True
                    ),
                ),
                ("email_blocked", models.BooleanField(default=False)),
                ("makeup", models.BooleanField(default=False)),
                ("costume", models.BooleanField(default=False)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="haunt_ops.events",
                    ),
                ),
                (
                    "volunteer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "event_volunteers",
                "ordering": ["date"],
            },
        ),
        migrations.CreateModel(
            name="Groups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "group_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("group_points", models.IntegerField(default=1)),
            ],
            options={
                "db_table": "groups",
                "ordering": ["group_name"],
                "constraints": [
                    models.UniqueConstraint(
                        django.db.models.functions.text.Lower("group_name"),
                        name="uniq_group_name_ci",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="GroupVolunteers",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_volunteers",
                        to="haunt_ops.groups",
                    ),
                ),
                (
                    "volunteer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_volunteers_as_volunteer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "group_volunteers",
                "ordering": ["group"],
            },
        ),
    ]
